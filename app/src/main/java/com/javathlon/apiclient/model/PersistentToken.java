/**
 * PodcastModern API
 * PodcastModern API documentation
 * <p>
 * OpenAPI spec version: 0.0.1
 * <p>
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.javathlon.apiclient.model;

import com.google.gson.annotations.SerializedName;

import org.joda.time.LocalDate;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;


/**
 * PersistentToken
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-24T13:50:52.801+04:00")
public class PersistentToken {
    @SerializedName("ipAddress")
    private String ipAddress = null;

    @SerializedName("series")
    private String series = null;

    @SerializedName("tokenDate")
    private LocalDate tokenDate = null;

    @SerializedName("userAgent")
    private String userAgent = null;

    public PersistentToken ipAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }

    /**
     * Get ipAddress
     * @return ipAddress
     **/
    @ApiModelProperty(example = "null", value = "")
    public String getIpAddress() {
        return ipAddress;
    }

    public void setIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
    }

    public PersistentToken series(String series) {
        this.series = series;
        return this;
    }

    /**
     * Get series
     * @return series
     **/
    @ApiModelProperty(example = "null", value = "")
    public String getSeries() {
        return series;
    }

    public void setSeries(String series) {
        this.series = series;
    }

    public PersistentToken tokenDate(LocalDate tokenDate) {
        this.tokenDate = tokenDate;
        return this;
    }

    /**
     * Get tokenDate
     * @return tokenDate
     **/
    @ApiModelProperty(example = "null", value = "")
    public LocalDate getTokenDate() {
        return tokenDate;
    }

    public void setTokenDate(LocalDate tokenDate) {
        this.tokenDate = tokenDate;
    }

    public PersistentToken userAgent(String userAgent) {
        this.userAgent = userAgent;
        return this;
    }

    /**
     * Get userAgent
     * @return userAgent
     **/
    @ApiModelProperty(example = "null", value = "")
    public String getUserAgent() {
        return userAgent;
    }

    public void setUserAgent(String userAgent) {
        this.userAgent = userAgent;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PersistentToken persistentToken = (PersistentToken) o;
        return Objects.equals(this.ipAddress, persistentToken.ipAddress) &&
                Objects.equals(this.series, persistentToken.series) &&
                Objects.equals(this.tokenDate, persistentToken.tokenDate) &&
                Objects.equals(this.userAgent, persistentToken.userAgent);
    }

    @Override
    public int hashCode() {
        return Objects.hash(ipAddress, series, tokenDate, userAgent);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PersistentToken {\n");

        sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
        sb.append("    series: ").append(toIndentedString(series)).append("\n");
        sb.append("    tokenDate: ").append(toIndentedString(tokenDate)).append("\n");
        sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

